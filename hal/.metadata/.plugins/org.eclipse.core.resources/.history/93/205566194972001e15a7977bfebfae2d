/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "stm32f4xx_hal.h"
#include <string.h>
#include <stdio.h>
#include "uart.h"
#include "adc.h"

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
/* GLOBAL VARIABLES */
ADC_HandleTypeDef hadc1;
uint32_t Sensor_Value;

int main(void)
{
	HAL_Init();
	UART1_Init();
	ADC_PA0_Interrupt_Init();
	while(1)
	{

		// 3, Get conversion

		printf("Sensor Value is :- %d \n\r",(int)Sensor_Value);
//		HAL_Delay(100);
	}

//    /* Loop forever */
//	for(;;);
}

void SysTick_Handler(void)
{
	HAL_IncTick();
}

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
{
	HAL_ADC_Start_IT(&hadc1);
	Sensor_Value = ADC_PA0_Read();

}
