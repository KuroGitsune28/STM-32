/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "stm32f4xx_hal.h"
#include <string.h>
#include <stdio.h>
#include "uart.h"
#include "adc.h"

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
/* GLOBAL VARIABLES */
DMA_HandleTypeDef hdma2;
static const uint32_t Src_Buffer[32] = {21,2,3,4,5,2,67,35,
										213,466,2,4,543,21,34,
										123,211,2,3,44,1,34,
										223,344,21,45,67,45,89,66};
static const uint32_t Dest_Buffer[32];

int main(void)
{
	HAL_Init();
	UART1_Init();


	while(1)
	{

	}

//    /* Loop forever */
//	for(;;);
}

void SysTick_Handler(void)
{
	HAL_IncTick();
}

void DMA_Config(void)
{
	__HAL_RCC_DMA2_CLK_ENABLE();

	hdma2.Instance 					= DMA2_Stream0;
	hdma2.Init.Channel				= DMA_CHANNEL_0;
	hdma2.Init.Direction			= DMA_MEMORY_TO_MEMORY;
	hdma2.Init.PeriphDataAlignment	= DMA_PDATAALIGN_WORD;
	hdma2.Init.MemDataAlignment		= DMA_MDATAALIGN_WORD;
	hdma2.Init.PeriphInc			= DMA_PINC_ENABLE;
	hdma2.Init.MemInc				= DMA_MINC_ENABLE;
	hdma2.Init.Mode					= DMA_NORMAL;
	hdma2.Init.FIFOMode				= DMA_FIFOMODE_ENABLE;
	hdma2.Init.FIFOThreshold		= DMA_FIFO_THRESHOLD_1QUARTERFULL;
	hdma2.Init.MemBurst				= DMA_MBURST_SINGLE;
	hdma2.Init.PeriphBurst			= DMA_PBURST_SINGLE;
	hdma2.Init.Priority				= DMA_PRIORITY_HIGH;

}
