/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "stm32f4xx_hal.h"
#include <string.h>

/*
 * BOARD INFO :-
 *
 *	USART 2
 *	USART_TX	-	PA2		AF7
 *	USART_RX	- 	PA3		AF7
 *
 * */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
/* GLOBAL VARIABLES */
//UART	HandleTypeDef
UART_HandleTypeDef		Uart2;
char Datatosend[]="Hello this is Aryan, Reply If you receive this\r\n";

void UART2_Init(void);


int main(void)
{
	HAL_Init();
	UART2_Init();

	while(1)
	{
		HAL_UART_Transmit(&Uart2,(uint8_t*)Datatosend,strlen(Datatosend),100);
	}

    /* Loop forever */
	for(;;);
}

void SysTick_Handler(void)
{
	HAL_IncTick();
}

void UART2_Init(void)
{
	__HAL_RCC_GPIOA_CLK_ENABLE();

	// Configure Clock for UART
	//GPIO init typedef
	GPIO_InitTypeDef	GpioStruct;
	__HAL_RCC_USART2_CLK_ENABLE();

//	UART_HandleTypeDef		Uart2; // Declared Globally for usage by all

	/**********************/
	// USART MSP Init For GPIO Configuration then manual.

	//	HAL_UART_MspInit(Uart2);
	/**********************/

	// GPIO Configuration

	GpioStruct.Pin			=	GPIO_PIN_2 | GPIO_PIN_3;
	GpioStruct.Mode 		=	GPIO_MODE_AF_PP;
	GpioStruct.Alternate	=	GPIO_AF7_USART2;
	GpioStruct.Pull			= 	GPIO_NOPULL;
	GpioStruct.Speed		= 	GPIO_SPEED_FREQ_VERY_HIGH;

	HAL_GPIO_Init(GPIOA,&GpioStruct);

	// USART2 Configuration


	Uart2.Instance				=	USART2; // USART2 Base Address is given
	// Don't get confused between UART and USART there is just a bit difference
	// We are configuring USART2 as UART

	Uart2.Init.BaudRate			=	115200;
	Uart2.Init.WordLength		=	UART_WORDLENGTH_8B;
	Uart2.Init.StopBits			=	UART_STOPBITS_1;
	Uart2.Init.Mode				=	UART_MODE_TX;
	Uart2.Init.Parity			=	UART_PARITY_NONE;
	Uart2.Init.HwFlowCtl		=	UART_HWCONTROL_NONE;
	Uart2.Init.OverSampling		=	UART_OVERSAMPLING_16;

	HAL_UART_Init(&Uart2);

}
